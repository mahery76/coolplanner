// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user_roles {
  user_role_id   String  @id @default(uuid())
  user_role_name String
  users          users[]
}

model users {
  user_id      String         @id @default(uuid())
  user_role_id String
  role         user_roles     @relation(fields: [user_role_id], references: [user_role_id])
  core_classes core_classes[]
  courses      courses[]
  teachers     teachers[]
  rooms        rooms[]
  classes      classes[]
}

model core_classes {
  core_classe_id String        @id @default(uuid())
  user_id        String
  user           users         @relation(fields: [user_id], references: [user_id])
  assignments    assignments[]
}

model courses {
  course_id   String        @id @default(uuid())
  course_name String
  user_id     String
  user        users         @relation(fields: [user_id], references: [user_id])
  assignments assignments[]
}

model teachers {
  teacher_id           String                   @id @default(uuid())
  teacher_name         String
  user_id              String
  user                 users                    @relation(fields: [user_id], references: [user_id])
  teacher_availability teacher_availabilities[]
  assignments          assignments[]
}

model timeslots {
  slot_id              String                   @id @default(uuid())
  slo_value            String
  teacher_availability teacher_availabilities[]
}

model rooms {
  room_id     String        @id @default(uuid())
  room_name   String
  user_id     String
  user        users         @relation(fields: [user_id], references: [user_id])
  assignments assignments[]
  occupations occupations[]
}

model classes {
  class_id    String        @id @default(uuid())
  class_name  String
  user_id     String
  user        users         @relation(fields: [user_id], references: [user_id])
  assignments assignments[]
}

model teacher_availabilities {
  teacher_availability_id String        @id @default(uuid())
  availability_date       DateTime
  teacher_id              String
  teacher                 teachers      @relation(fields: [teacher_id], references: [teacher_id])
  slot_id                 String
  slot                    timeslots     @relation(fields: [slot_id], references: [slot_id])
  occupations             occupations[]
}

model assignments {
  assignment_id              String        @id @default(uuid())
  assignment_hours           Int
  assignment_remaining_hours Int
  course_id                  String
  course                     courses       @relation(fields: [course_id], references: [course_id])
  teacher_id                 String
  teachers                   teachers      @relation(fields: [teacher_id], references: [teacher_id])
  class_id                   String
  classes                    classes       @relation(fields: [class_id], references: [class_id])
  room_id                    String
  rooms                      rooms         @relation(fields: [room_id], references: [room_id])
  core_classe_id             String
  core_classe                core_classes  @relation(fields: [core_classe_id], references: [core_classe_id])
  occupations                occupations[]
}

model occupations {
  occupations_id          String                 @id @default(uuid())
  remaining_hours         Int
  teacher_availability_id String
  teacher_availability    teacher_availabilities @relation(fields: [teacher_availability_id], references: [teacher_availability_id])
  assignment_id           String
  assignment              assignments            @relation(fields: [assignment_id], references: [assignment_id])
  room_id                 String
  rooma                   rooms                  @relation(fields: [room_id], references: [room_id])
}
